---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/base-layout.astro";
import Link from "../components/link.astro";
import Arrow from "../components/arrow.astro";
import { slugify, dateFormatter } from "../lib/utils";

import { getCollection } from "astro:content";

const blog = await getCollection("blog");
// Sort posts by pubDate, latest first
const sortedPosts = blog.sort(
    (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
);

const [heroPost, ...remainingPosts] = sortedPosts;
const [secondPost, thirdPost, ...restPosts] = remainingPosts;
---

<BaseLayout title="Astro Blog" description="A blog about Astro">
    <div class="flex flex-col gap-8">
        <h1 class="text-4xl font-bold">Welcome to Astro Blog</h1>

        {/* Hero Post - Latest */}
        {
            heroPost && (
                <article class="flex flex-col gap-4">
                    <Image
                        src={heroPost.data.coverImg}
                        alt={heroPost.data.title}
                        className="w-full h-auto rounded-lg shadow"
                    />
                    <div class="flex flex-col">
                        <div class="flex justify-between items-center">
                            <Link
                                internal
                                href={`/posts/${slugify(heroPost.data.title)}`}
                            >
                                <h2
                                    class="text-3xl font-bold mb-2"
                                    transition:name={`post-title-${heroPost.data.title}`}
                                >
                                    {heroPost.data.title}
                                </h2>
                            </Link>
                            <span class="text-foreground/50 dark:text-foreground/60" transition:name={`post-date-${heroPost.data.title}`}>
                                {new Date(heroPost.data.pubDate).toLocaleDateString()}
                            </span>
                        </div>
                        <p class="text-lg">{heroPost.data.description}</p>
                        <div class="flex gap-2 mt-4">
                            {heroPost.data.tags.map((tag) => (
                                <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm">
                                    {tag}
                                </span>
                            ))}
                        </div>
                    </div>
                </article>
            )
        }

        {/* Two Column Row - Second and Third Posts */}
        {
            (secondPost || thirdPost) && (
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {secondPost && (
                        <article class="flex flex-col gap-4">
                            <Image
                                src={secondPost.data.coverImg}
                                alt={secondPost.data.title}
                                className="w-full h-auto rounded-lg shadow"
                            />
                            <div class="flex flex-col">
                                 <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-semibold mb-2" transition:name={`post-title-${secondPost.data.title}`}>
                                        {secondPost.data.title}
                                    </h2>
                                    <span class="text-foreground/50 dark:text-foreground/60 text-sm" transition:name={`post-date-${secondPost.data.title}`}>
                                        {new Date(
                                            secondPost.data.pubDate,
                                        ).toLocaleDateString()}
                                    </span>
                                 </div>
                                <p class="">
                                    {secondPost.data.description}
                                </p>
                                <div class="flex gap-2 mt-3">
                                    {secondPost.data.tags.map((tag) => (
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                                            {tag}
                                        </span>
                                    ))}
                                </div>
                            </div>
                        </article>
                    )}
                    {thirdPost && (
                        <article class="flex flex-col gap-4">
                            <Image
                                src={thirdPost.data.coverImg}
                                alt={thirdPost.data.title}
                                className="w-full h-auto rounded-lg shadow"
                            />
                            <div class="flex flex-col">
                                 <div class="flex justify-between items-center">
                                    <h2 class="text-xl font-semibold mb-2" transition:name={`post-title-${thirdPost.data.title}`}>
                                        {thirdPost.data.title}
                                    </h2>
                                    <span class="text-foreground/50 dark:text-foreground/60 text-sm" transition:name={`post-date-${thirdPost.data.title}`}>
                                        {new Date(
                                            thirdPost.data.pubDate,
                                        ).toLocaleDateString()}
                                    </span>
                                 </div>
                                <p class="">
                                    {thirdPost.data.description}
                                </p>
                                <div class="flex gap-2 mt-3">
                                    {thirdPost.data.tags.map((tag) => (
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                                            {tag}
                                        </span>
                                    ))}
                                </div>
                            </div>
                        </article>
                    )}
                </div>
            )
        }

        {/* Rest of Posts - Separate Lines */}
        {
            restPosts.length > 0 && (
                <div class="flex flex-col gap-4">
                    {restPosts.map((post) => (
                        <article class="flex justify-between items-center">
                            <div class="flex items-center group gap-2">
                                <Arrow />
                                <h2 class="text-lg font-medium" transition:name={`post-title-${post.data.title}`}>
                                    {post.data.title}
                                </h2>
                            </div>
                            <span class="text-foreground/50 dark:text-foreground/60 text-sm" transition:name={`post-date-${post.data.title}`}>
                                {new Date(
                                    post.data.pubDate,
                                ).toLocaleDateString()}
                            </span>
                        </article>
                    ))}
                </div>
            )
        }
    </div>
</BaseLayout>
