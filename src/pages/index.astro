---
import { Image } from "astro:assets";
import BaseLayout from "../layouts/base-layout.astro";
import Link from "../components/link.astro";
import { slugify, dateFormatter } from "../lib/utils";

import { getCollection } from "astro:content";

const blog = await getCollection("blog");
// Sort posts by pubDate, latest first
const sortedPosts = blog.sort(
    (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
);

const [heroPost, ...remainingPosts] = sortedPosts;
const [secondPost, thirdPost, ...restPosts] = remainingPosts;
---

<BaseLayout title="Astro Blog" description="A blog about Astro">
    <div class="flex flex-col gap-8">
        <h1 class="text-4xl font-bold">Welcome to Astro Blog</h1>

        {/* Hero Post - Latest */}
        {
            heroPost && (
                <article class="bg-gray-100 p-6 rounded-lg shadow-lg">
                    <Image
                        src={heroPost.data.coverImg}
                        alt={heroPost.data.title}
                        className="w-full h-auto"
                    />
                    <Link
                        internal
                        href={`/posts/${slugify(heroPost.data.title)}`}
                    >
                        <h2
                            class="text-3xl font-bold mb-2"
                            transition:name={`post-title-${heroPost.data.title}`}
                        >
                            {heroPost.data.title}
                        </h2>
                    </Link>
                    <p class="text-gray-600 mb-2">
                        {new Date(heroPost.data.pubDate).toLocaleDateString()}
                    </p>
                    <p class="text-lg">{heroPost.data.description}</p>
                    <div class="flex gap-2 mt-4">
                        {heroPost.data.tags.map((tag) => (
                            <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded text-sm">
                                {tag}
                            </span>
                        ))}
                    </div>
                </article>
            )
        }

        {/* Two Column Row - Second and Third Posts */}
        {
            (secondPost || thirdPost) && (
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    {secondPost && (
                        <article class="bg-white border border-gray-200 p-4 rounded-lg shadow">
                            <Image
                                src={secondPost.data.coverImg}
                                alt={secondPost.data.title}
                                className="w-full h-auto"
                            />
                            <h2 class="text-xl font-semibold mb-2">
                                {secondPost.data.title}
                            </h2>
                            <p class="text-gray-500 text-sm mb-2">
                                {new Date(
                                    secondPost.data.pubDate,
                                ).toLocaleDateString()}
                            </p>
                            <p class="text-gray-700">
                                {secondPost.data.description}
                            </p>
                            <div class="flex gap-2 mt-3">
                                {secondPost.data.tags.map((tag) => (
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        </article>
                    )}
                    {thirdPost && (
                        <article class="bg-white border border-gray-200 p-4 rounded-lg shadow">
                            <Image
                                src={thirdPost.data.coverImg}
                                alt={thirdPost.data.title}
                                className="w-full h-auto"
                            />
                            <h2 class="text-xl font-semibold mb-2">
                                {thirdPost.data.title}
                            </h2>
                            <p class="text-gray-500 text-sm mb-2">
                                {new Date(
                                    thirdPost.data.pubDate,
                                ).toLocaleDateString()}
                            </p>
                            <p class="text-gray-700">
                                {thirdPost.data.description}
                            </p>
                            <div class="flex gap-2 mt-3">
                                {thirdPost.data.tags.map((tag) => (
                                    <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded text-xs">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        </article>
                    )}
                </div>
            )
        }

        {/* Rest of Posts - Separate Lines */}
        {
            restPosts.length > 0 && (
                <div class="flex flex-col gap-4">
                    {restPosts.map((post) => (
                        <article class="bg-white border-l-4 border-blue-500 p-4 shadow">
                            <h2 class="text-lg font-medium mb-1">
                                {post.data.title}
                            </h2>
                            <p class="text-gray-500 text-sm mb-2">
                                {new Date(
                                    post.data.pubDate,
                                ).toLocaleDateString()}
                            </p>
                            <p class="text-gray-600">{post.data.description}</p>
                            <div class="flex gap-2 mt-2">
                                {post.data.tags.map((tag) => (
                                    <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                                        {tag}
                                    </span>
                                ))}
                            </div>
                        </article>
                    ))}
                </div>
            )
        }
    </div>
</BaseLayout>
